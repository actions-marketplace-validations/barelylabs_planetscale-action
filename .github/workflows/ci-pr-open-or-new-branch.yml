name: New branch or pull request opened/synchronized

env:
  PLANETSCALE_ORG_NAME: ${{ secrets.PLANETSCALE_ORG_NAME }}
  PLANETSCALE_DB_NAME: ${{ secrets.PLANETSCALE_DB_NAME }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}

on:
  push:
    branches-ignore:
      - main

  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  # turbo build and cache

  # turbo-build:
  #   name: Turbo Build
  #   runs-on: ubuntu-latest
  #   if: ${{ !github.event.delete || github.event.action == 'opened' || github.event.action == 'synchronize' }}
  #   env:
  #     TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  #     TURBO_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - uses: pnpm /action-setup@v2.0.1
  #       with:
  #         version: 6.32.2

  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #         cache: 'pnpm'

  #     - name: Install dependencies
  #       run: pnpm i && pnpm i -r

  #     - name: Build
  #       run: pnpm build

  # create (or overwrite) a new db branch for the pull request preview

  db-branch:
    name: Create Planetscale Dev Branch
    runs-on: ubuntu-latest
    if: ${{ github.event.create || github.event.action == 'opened' || github.event.action == 'synchronize' }}
    # outputs:
    #   branch-name: ${{ steps.create-db-branch.outputs.branch-name }}
    #   connection-string: ${{ steps.create-db-branch.outputs.connection-string }}
    # outputs:
    #   deploy-request-status: ${{ steps.deploy-db-branch.outputs.deploy-request-status }}

    steps:
      - uses: actions/checkout@v3

      # - name: Create db branch
      #   id: create-db-branch
      #   uses: ./
      #   with:
      #     action: 'create'
      #     overwrite-branch: true

      - name: Deploy db branch to main
        id: deploy-db-branch
        uses: ./
        with:
          action: 'delete'

  # deploy previews to vercel for web, app, and link

  # deploy-link:
  #   name: Vercel Preview Deployment - link.barely.io
  #   needs: [db]
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.create || github.event.action == 'opened' || github.event.action == 'synchronize' }}
  #   env:
  #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_LINK_PROJECT_ID }}
  #   steps:
  #     - uses: snaplet/action@v1
  #       with:
  #         env: |
  #           DATABASE_URL=${{ needs.db.outputs.connection-string }}

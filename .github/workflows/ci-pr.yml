name: pull request opened/synced or closed.

env:
  PLANETSCALE_ORG_NAME: ${{ secrets.PLANETSCALE_ORG_NAME }}
  PLANETSCALE_DB_NAME: ${{ secrets.PLANETSCALE_DB_NAME }}
  PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
  PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main

jobs:
  opened:
    name: Create Planetscale Dev Branch
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' }}
    outputs:
      branch-name: ${{ steps.create-db-branch.outputs.branch-name }}
      connection-string: ${{ steps.create-db-branch.outputs.connection-string }}

    steps:
      - uses: actions/checkout@v3

      - name: Create db branch
        id: create-db-branch
        uses: ./
        with:
          action: 'create-branch'
          overwrite-existing-branch: true

  merged:
    name: Merge Planetscale Dev Branch
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'closed' && github.event.pull_request.merged == false }}
    outputs:
      deploy-request-state: ${{ steps.queue-deploy-request.outputs.deploy-request-state }}
      deploy-request-deployment-state: ${{ steps.queue-deploy-request.outputs.deploy-request-deployment-state }}

    steps:
      - uses: actions/checkout@v3

      - name: Queue deploy request
        id: queue-deploy-request
        uses: ./
        with:
          action: 'queue-deploy-request'

    # ...next steps. e.g. don't deploy to vercel (or rollback deployment) if the db deploy fails
